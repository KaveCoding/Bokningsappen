// <auto-generated />
using System;
using EF_Demo_many2many2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bokningsappen.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20230118114133_test3")]
    partial class test3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bokningsappen.Models.AdminKonto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Lösen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminKonton");
                });

            modelBuilder.Entity("Bokningsappen.Models.Bokning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RumId")
                        .HasColumnType("int");

                    b.Property<int?>("SällskapId")
                        .HasColumnType("int");

                    b.Property<bool>("Tillgänglig")
                        .HasColumnType("bit");

                    b.Property<string>("Veckodag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Veckonummer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RumId");

                    b.HasIndex("SällskapId");

                    b.ToTable("Bokningar");
                });

            modelBuilder.Entity("Bokningsappen.Models.Rum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bord")
                        .HasColumnType("int");

                    b.Property<int>("Stolar")
                        .HasColumnType("int");

                    b.Property<int>("TV")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Bokningsappen.Models.Sällskap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aktivitet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Antal_i_sällskapet")
                        .HasColumnType("int");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sällskaper");
                });

            modelBuilder.Entity("Bokningsappen.Models.Bokning", b =>
                {
                    b.HasOne("Bokningsappen.Models.Rum", null)
                        .WithMany("Bokningar")
                        .HasForeignKey("RumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bokningsappen.Models.Sällskap", null)
                        .WithMany("Bokningar")
                        .HasForeignKey("SällskapId");
                });

            modelBuilder.Entity("Bokningsappen.Models.Rum", b =>
                {
                    b.Navigation("Bokningar");
                });

            modelBuilder.Entity("Bokningsappen.Models.Sällskap", b =>
                {
                    b.Navigation("Bokningar");
                });
#pragma warning restore 612, 618
        }
    }
}
